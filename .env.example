# ==============================================================================
#  Trans-Hub 示例配置文件
# ==============================================================================
#
# 使用说明：
# 1. 将此文件复制或重命名为 .env
# 2. 根据您的需求，取消注释并修改下面的值。
# 3. Trans-Hub 启动时会自动从 .env 文件或环境变量加载这些配置。
#
# 所有变量都以 TH_ (Trans-Hub) 为前缀。
# 子配置使用双下划线 `__` 分隔层级，例如 TH_RETRY_POLICY__MAX_ATTEMPTS
# ==============================================================================

# ------------------------------------------------------------------------------
#  核心配置 (Core)
# ------------------------------------------------------------------------------
# 数据库连接 URL。对于生产环境，推荐使用绝对路径。
# 示例: TH_DATABASE_URL="sqlite:////var/data/transhub.db"
TH_DATABASE_URL="sqlite:///transhub.db"

# 默认的源语言代码 (例如 'en', 'zh-CN')。如果引擎需要，则必须提供。
# TH_SOURCE_LANG="en"

# 默认激活的翻译引擎。可用值: "debug", "translators", "openai"。
TH_ACTIVE_ENGINE="translators"

# 单次从数据库获取任务进行处理的最大批次大小。
# TH_BATCH_SIZE=50

# 垃圾回收（GC）保留未被访问源记录的天数。
# TH_GC_RETENTION_DAYS=90


# ------------------------------------------------------------------------------
#  缓存配置 (Cache)
# ------------------------------------------------------------------------------
# 缓存类型，可以是 'ttl' (基于时间过期) 或 'lru' (基于最近最少使用)。
# TH_CACHE_CONFIG__CACHE_TYPE="ttl"

# 缓存的最大条目数。
# TH_CACHE_CONFIG__MAXSIZE=1000

# 当 cache_type 为 'ttl' 时，缓存条目的存活时间（秒）。
# TH_CACHE_CONFIG__TTL=3600


# ------------------------------------------------------------------------------
#  重试策略配置 (Retry Policy)
# ------------------------------------------------------------------------------
# 任务失败后的最大重试次数。
# TH_RETRY_POLICY__MAX_ATTEMPTS=2

# 首次重试的初始等待时间（秒）。
# TH_RETRY_POLICY__INITIAL_BACKOFF=1.0

# 重试等待时间的最大上限（秒），以防止无限指数增长。
# TH_RETRY_POLICY__MAX_BACKOFF=60.0


# ------------------------------------------------------------------------------
#  日志配置 (Logging)
# ------------------------------------------------------------------------------
# 日志级别，例如 "DEBUG", "INFO", "WARNING", "ERROR"。
# TH_LOGGING__LEVEL="INFO"

# 日志输出格式，'console' 用于开发环境（带颜色），'json' 用于生产环境。
# TH_LOGGING__FORMAT="console"


# ==============================================================================
#  引擎特定配置 (Engine-Specific)
# ==============================================================================

# ------------------------------------------------------------------------------
#  OpenAI 引擎
#
# 注意：这些变量由 OpenAIEngineConfig 模型直接加载，
# Pydantic-Settings 会自动将 TH_OPENAI_API_KEY 映射到模型中的 openai_api_key 字段。
# ------------------------------------------------------------------------------
# 要使用 "openai" 引擎，请取消以下变量的注释并填入您的凭据。

# [必需] 你的 OpenAI 兼容 API 的地址。
# TH_OPENAI_ENDPOINT="https://api.openai.com/v1"

# [必需] 你的 API 密钥。
# TH_OPENAI_API_KEY="sk-your-secret-key-here"

# [可选] 你希望使用的模型名称。
# TH_OPENAI_MODEL="gpt-4o"

# [可选] API 调用的温度参数，控制创造性。
# TH_OPENAI_TEMPERATURE=0.1


# ------------------------------------------------------------------------------
#  Translators 引擎
# ------------------------------------------------------------------------------
# [可选] translators 库使用的默认翻译服务商。
# TH_TRANSLATORS_PROVIDER="google"


# ------------------------------------------------------------------------------
#  Debug 引擎
# ------------------------------------------------------------------------------
# [可选] Debug 引擎的运行模式。可以是 "SUCCESS", "FAIL"。
# TH_DEBUG_MODE="SUCCESS"