# ==============================================================================
#  Trans-Hub 示例配置文件 (.env.example) - v3.26
# ==============================================================================
#
# 使用说明：
# 1. 将此文件复制或重命名为 .env
# 2. 根据您的实际环境，取消注释并修改下面的值
# 3. Trans-Hub 启动时会自动从 .env 文件或环境变量加载这些配置
#
# 注意：
# - PostgreSQL / MySQL / SQLite 三选一（可混合测试，但生产建议只选一个）
# - Redis 为可选增强组件，不启用也可正常运行
# ==============================================================================


# ------------------------------------------------------------------------------
#  核心配置 (Core)
# ------------------------------------------------------------------------------

## 数据库连接 URL
## 支持三种驱动：SQLite（默认）、PostgreSQL、MySQL
## 格式参考：
##   SQLite     -> sqlite+aiosqlite:///路径
##   PostgreSQL -> postgresql+asyncpg://用户:密码@主机:端口/数据库
##   MySQL      -> mysql+aiomysql://用户:密码@主机:端口/数据库
##
## 建议：
## - 开发/测试：SQLite（文件型，零配置）
## - 生产：PostgreSQL（推荐）或 MySQL
##
TH_DATABASE_URL="sqlite+aiosqlite:///transhub.db"
# TH_DATABASE_URL="postgresql+asyncpg://user:password@localhost:5432/postgres"
# TH_DATABASE_URL="mysql+aiomysql://user:password@localhost:3306/transhub"

## [必填, 用于测试/工具] 数据库管理的连接 URL
## 必须指向一个您的用户有权连接并执行 `CREATE DATABASE` 的数据库（通常是 'postgres'）。
## 在生产环境中，此变量可以省略。
TH_MAINTENANCE_DATABASE_URL="ostgresql+asyncpg://user:password@localhost:5432/postgres"

## 默认源语言代码（如 'en', 'zh-CN'）
TH_SOURCE_LANG="en"

## 默认启用的翻译引擎，可选：debug | translators | openai
TH_ACTIVE_ENGINE="debug"

## 每次批量处理任务的最大条数
TH_BATCH_SIZE=50

## 垃圾回收保留天数（删除未被访问的源记录）
TH_GC_RETENTION_DAYS=90


# ------------------------------------------------------------------------------
#  Redis 缓存与分布式控制 (可选增强功能)
# ------------------------------------------------------------------------------
## Redis 用途：
## - 缓存：加速数据库查询结果
## - 分布式锁：防止多进程/多实例重复处理同一任务
## - 限流：多实例共享速率限制状态
## - 队列 / 事件流：高性能任务分发与异步处理
##
## Redis 关闭影响：
## - 核心功能不受影响（CRUD / 翻译引擎等照常运行）
## - 仅失去性能优化和分布式锁/限流能力
##
# Redis 连接 URL（单机模式）
# TH_REDIS_URL="redis://localhost:6379/0"

# Redis 集群节点（逗号分隔）
# TH_REDIS_CLUSTER_NODES="redis://node1:6379,redis://node2:6379"

# Redis Sentinel 配置
# TH_REDIS_SENTINEL_NODES="host1:26379,host2:26379"
# TH_REDIS_SENTINEL_MASTER="mymaster"

# 缓存默认 TTL（秒）
TH_CACHE_CONFIG__TTL=3600

# 缓存最大条目数（LRU 模式下生效）
TH_CACHE_CONFIG__MAXSIZE=1000

# 缓存 key 前缀（区分环境）
TH_REDIS_KEY_PREFIX="th:dev:"


# ------------------------------------------------------------------------------
#  队列与事件流 (可选增强功能)
# ------------------------------------------------------------------------------
## 说明：
## - 如果使用 Redis，可用 List / Streams 做任务队列
## - 不使用 Redis 时，队列功能可降级为数据库轮询
##
# 队列类型：redis | db
TH_QUEUE_KIND="db"

# 队列 key 前缀
TH_QUEUE_PREFIX="th:queue:"

# 事件流 key 前缀
TH_STREAMS_PREFIX="th:streams:"


# ------------------------------------------------------------------------------
#  重试策略 (Retry Policy)
# ------------------------------------------------------------------------------
TH_RETRY_POLICY__MAX_ATTEMPTS=2
TH_RETRY_POLICY__INITIAL_BACKOFF=1.0
TH_RETRY_POLICY__MAX_BACKOFF=60.0


# ------------------------------------------------------------------------------
#  日志与可观测性 (Logging & Observability)
# ------------------------------------------------------------------------------
TH_LOGGING__LEVEL="INFO"       # 日志级别：DEBUG | INFO | WARNING | ERROR
TH_LOGGING__FORMAT="console"   # 输出格式：console（开发） | json（生产）

# 可选：启用 OpenTelemetry 导出（如 Prometheus / Jaeger）
# TH_OTEL_EXPORTER="prometheus"


# ------------------------------------------------------------------------------
#  引擎配置 (Engines)
# ------------------------------------------------------------------------------

# --- OpenAI 引擎 ---
# TH_OPENAI_ENDPOINT="https://api.openai.com/v1"
# TH_OPENAI_API_KEY="sk-your-secret-key-here"
# TH_OPENAI_MODEL="gpt-4o"
# TH_OPENAI_TEMPERATURE=0.1
# TH_OPENAI_TIMEOUT_TOTAL=30.0
# TH_OPENAI_TIMEOUT_CONNECT=5.0
# TH_OPENAI_MAX_RETRIES=2

# --- Translators 引擎 ---
# TH_TRANSLATORS_PROVIDER="google"

# --- Debug 引擎 ---
# TH_DEBUG_MODE="SUCCESS"
# TH_DEBUG_FAIL_ON_TEXT="fail me"
# TH_DEBUG_FAIL_IS_RETRYABLE=true
