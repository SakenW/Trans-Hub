# .github/workflows/ci.yml

name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    # 步骤 1: 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 步骤 2: 设置 Python 环境
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    # === [核心修正] 步骤 3: 使用专业的 Action 安装 Poetry ===
    # 这个 action 会处理好所有路径问题和缓存
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        # 你可以在这里指定 poetry 的版本
        version: latest 
    
    # 步骤 4: 安装项目依赖
    # `snok/install-poetry` 已经处理了缓存，但我们也可以在这里保留 poetry 的缓存配置
    - name: Install dependencies
      run: poetry install --with dev --all-extras
      
    # === 后续步骤保持不变 ===

    - name: Lint with Ruff
      run: poetry run ruff check .

    - name: Check formatting with Black and isort
      run: |
        poetry run black --check .
        poetry run isort --check-only .

    - name: Type check with Mypy
      run: poetry run mypy .
      
    - name: Run tests
      run: poetry run python run_coordinator_test.py